(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[33524],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(h,l(l({ref:t},s),{},{components:n})):r.createElement(h,l({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},87570:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return i},default:function(){return s}});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),l={title:"Deploy Helm Charts"},c={unversionedId:"end-user/components/helm",id:"version-v1.3/end-user/components/helm",isDocsHomePage:!1,title:"Deploy Helm Charts",description:"KubeVela's Helm component meets the needs of users to connect to Helm Chart. You can deploy any ready-made Helm chart software package from Helm Repo, Git Repo or OSS bucket through the Helm component, and overwrite its parameters.",source:"@site/versioned_docs/version-v1.3/end-user/components/helm.md",sourceDirName:"end-user/components",slug:"/end-user/components/helm",permalink:"/docs/end-user/components/helm",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/components/helm.md",version:"v1.3",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1649421307,formattedLastUpdatedAt:"4/8/2022",frontMatter:{title:"Deploy Helm Charts"},sidebar:"version-v1.3/docs",previous:{title:"Architecture",permalink:"/docs/getting-started/architecture"},next:{title:"Deploy Container as Web Service",permalink:"/docs/end-user/components/cue/webservice"}},i=[{value:"Deploy From Helm Repo",id:"deploy-from-helm-repo",children:[]},{value:"Deploy From OSS bucket",id:"deploy-from-oss-bucket",children:[]},{value:"Deploy From Git Repo",id:"deploy-from-git-repo",children:[]}],p={toc:i};function s(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"KubeVela's Helm component meets the needs of users to connect to Helm Chart. You can deploy any ready-made Helm chart software package from Helm Repo, Git Repo or OSS bucket through the Helm component, and overwrite its parameters."),(0,a.kt)("h2",{id:"deploy-from-helm-repo"},"Deploy From Helm Repo"),(0,a.kt)("p",null,"In this ",(0,a.kt)("inlineCode",{parentName:"p"},"Application"),", we hope to deliver a component called redis-comp. It is a chart from the ",(0,a.kt)("a",{parentName:"p",href:"https://charts.bitnami.com/bitnami"},"bitnami"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cat <<EOF | vela up -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: app-delivering-chart\nspec:\n  components:\n    - name: redis-comp\n      type: helm\n      properties:\n        chart: redis-cluster\n        version: 6.2.7\n        url: https://charts.bitnami.com/bitnami\n        repoType: helm\nEOF\n")),(0,a.kt)("p",null,"Please copy the above code block and deploy it directly to the runtime cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"application.core.oam.dev/app-delivering-chart created\n")),(0,a.kt)("p",null,"Finally, we use ",(0,a.kt)("inlineCode",{parentName:"p"},"vela ls")," to view the application status after successful delivery:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"APP                     COMPONENT   TYPE        TRAITS  PHASE   HEALTHY STATUS  CREATED-TIME                 \napp-delivering-chart    redis-comp  helm                running healthy         2021-08-28 18:48:21 +0800 CST\n")),(0,a.kt)("p",null,"We also see that the PHASE of the app-delivering-chart APP is running and the STATUS is healthy."),(0,a.kt)("h2",{id:"deploy-from-oss-bucket"},"Deploy From OSS bucket"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"(Optional) If your OSS bucket needs identity verification, create a Secret:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl create secret generic bucket-secret --from-literal=accesskey=<your-ak> --from-literal=secretkey=<your-sk>\nsecret/bucket-secret created\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: helm\n      properties:\n        repoType: oss\n        # required if bucket is private\n        secretRef: bucket-secret\n        chart: ./chart/podinfo-5.1.3.tgz\n        url: oss-cn-beijing.aliyuncs.com\n        oss:\n            bucketName: definition-registry\n")),(0,a.kt)("h2",{id:"deploy-from-git-repo"},"Deploy From Git Repo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n   name: app-delivering-chart\nspec:\n   components:\n     - name: terraform-controller\n       type: helm\n       properties:\n          repoType: git\n          url: https://github.com/oam-dev/terraform-controller\n          chart: ./chart\n          git:\n            branch: master\n")))}s.isMDXComponent=!0}}]);