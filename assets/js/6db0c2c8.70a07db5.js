(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[69760],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,k=c["".concat(o,".").concat(d)]||c[d]||u[d]||l;return n?a.createElement(k,p(p({ref:t},m),{},{components:n})):a.createElement(k,p({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,p=new Array(l);p[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var s=2;s<l;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},77778:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return o},default:function(){return m}});var a=n(22122),r=n(19756),l=(n(67294),n(3905)),p={title:"Built-in Trait Type"},i={unversionedId:"end-user/traits/references",id:"end-user/traits/references",isDocsHomePage:!1,title:"Built-in Trait Type",description:"This documentation will walk through the built-in traits.",source:"@site/docs/end-user/traits/references.md",sourceDirName:"end-user/traits",slug:"/end-user/traits/references",permalink:"/docs/next/end-user/traits/references",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/traits/references.md",version:"current",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1649409805,formattedLastUpdatedAt:"4/8/2022",frontMatter:{title:"Built-in Trait Type"},sidebar:"docs",previous:{title:"Built-in Component Type",permalink:"/docs/next/end-user/components/references"},next:{title:"Built-in Policy Type",permalink:"/docs/next/end-user/policies/references"}},o=[{value:"gateway",id:"gateway",children:[{value:"Apply To Component Types",id:"apply-to-component-types",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}]},{value:"rollout",id:"rollout",children:[{value:"Apply To Component Types",id:"apply-to-component-types-1",children:[]},{value:"Parameters",id:"parameters-1",children:[]},{value:"Examples",id:"examples-1",children:[]}]},{value:"Scaler",id:"scaler",children:[{value:"Apply To Component Types",id:"apply-to-component-types-2",children:[]}]},{value:"Parameters",id:"parameters-2",children:[{value:"Examples",id:"examples-2",children:[]}]},{value:"AutoScaler",id:"autoscaler",children:[{value:"Apply To Component Types",id:"apply-to-component-types-3",children:[]},{value:"Parameters",id:"parameters-3",children:[]},{value:"Examples",id:"examples-3",children:[]}]},{value:"Storage",id:"storage",children:[{value:"Apply To Component Types",id:"apply-to-component-types-4",children:[]},{value:"Parameters",id:"parameters-4",children:[]}]},{value:"Examples",id:"examples-4",children:[]},{value:"Labels",id:"labels",children:[{value:"Apply To Component Types",id:"apply-to-component-types-5",children:[]},{value:"Parameters",id:"parameters-5",children:[]},{value:"Examples",id:"examples-5",children:[]}]},{value:"Annotations",id:"annotations",children:[{value:"Apply To Component Types",id:"apply-to-component-types-6",children:[]},{value:"Parameters",id:"parameters-6",children:[]},{value:"Examples",id:"examples-6",children:[]}]},{value:"kustomize-patch",id:"kustomize-patch",children:[{value:"Apply To Component Types",id:"apply-to-component-types-7",children:[]},{value:"Parameters",id:"parameters-7",children:[]},{value:"Examples",id:"examples-7",children:[]}]},{value:"kustomize-json-patch",id:"kustomize-json-patch",children:[{value:"Apply To Component Types",id:"apply-to-component-types-8",children:[]},{value:"Parameters",id:"parameters-8",children:[]},{value:"Examples",id:"examples-8",children:[]}]},{value:"kustomize-strategy-merge",id:"kustomize-strategy-merge",children:[{value:"Apply To Component Types",id:"apply-to-component-types-9",children:[]},{value:"Parameters",id:"parameters-9",children:[]},{value:"Examples",id:"examples-9",children:[]}]},{value:"service-binding",id:"service-binding",children:[{value:"Apply To Component Types",id:"apply-to-component-types-10",children:[]},{value:"Parameters",id:"parameters-10",children:[]},{value:"Examples",id:"examples-10",children:[]}]},{value:"sidecar",id:"sidecar",children:[{value:"Apply To Component Types",id:"apply-to-component-types-11",children:[]},{value:"Parameters",id:"parameters-11",children:[]},{value:"Examples",id:"examples-11",children:[]}]}],s={toc:o};function m(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This documentation will walk through the built-in traits."),(0,l.kt)("h2",{id:"gateway"},"gateway"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"gateway")," trait exposes a component to public Internet via a valid domain."),(0,l.kt)("h3",{id:"apply-to-component-types"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"all component types")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"NAME"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"REQUIRED"),(0,l.kt)("th",{parentName:"tr",align:null},"DEFAULT"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"http"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the mapping relationship between the http path and the workload port"),(0,l.kt)("td",{parentName:"tr",align:null},"map","[string]","int"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the class of ingress to use"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"nginx")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classInSpec"),(0,l.kt)("td",{parentName:"tr",align:null},"Set ingress class in '.spec.ingressClassName' instead of 'kubernetes.io/ingress.class' annotation."),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"domain"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the domain you want to expose"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'# vela-app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8000\n      traits:\n        - type: gateway\n          properties:\n            domain: testsvc.example.com\n            http:\n              "/": 8000\n')),(0,l.kt)("h2",{id:"rollout"},"rollout"),(0,l.kt)("p",null,"Rollout Trait performs a rolling update on Component."),(0,l.kt)("h3",{id:"apply-to-component-types-1"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../components/cue/webservice"},"webservice")),(0,l.kt)("li",{parentName:"ul"},"worker"),(0,l.kt)("li",{parentName:"ul"},"clonset")),(0,l.kt)("h3",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"targetRevision"),(0,l.kt)("td",{parentName:"tr",align:null},"The target ComponentRevision"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"If this field is empty, it will always point to the latest revision")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"targetSize"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of target Workload's replicas"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Nil")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rolloutBatches"),(0,l.kt)("td",{parentName:"tr",align:null},"Strategy of rolling update"),(0,l.kt)("td",{parentName:"tr",align:null},"[]rolloutBatch"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Nil")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"batchPartition"),(0,l.kt)("td",{parentName:"tr",align:null},"Partition of rolloutBatches"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Nil, if this field is empty, all batches will be updated")))),(0,l.kt)("p",null,"Configurations of rolloutBatch"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"replicas"),(0,l.kt)("td",{parentName:"tr",align:null},"number of replicas in one batch"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Nil")))),(0,l.kt)("h3",{id:"examples-1"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: rollout-trait-test\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      externalRevision: express-server-v1\n      properties:\n        image: stefanprodan/podinfo:4.0.3\n      traits:\n        - type: rollout\n          properties:\n            targetSize: 5\n            rolloutBatches:\n              - replicas: 2\n              - replicas: 3\n")),(0,l.kt)("h2",{id:"scaler"},"Scaler"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"scaler")," trait allows you to change the replicas for the component."),(0,l.kt)("h3",{id:"apply-to-component-types-2"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"webservice"),(0,l.kt)("li",{parentName:"ul"},"worker"),(0,l.kt)("li",{parentName:"ul"},"task")),(0,l.kt)("h2",{id:"parameters-2"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ vela show scaler\n# Properties\n+----------+--------------------------------+------+----------+---------+\n|   NAME   |          DESCRIPTION           | TYPE | REQUIRED | DEFAULT |\n+----------+--------------------------------+------+----------+---------+\n| replicas | Specify the number of workload | int  | true     |       1 |\n+----------+--------------------------------+------+----------+---------+\n")),(0,l.kt)("h3",{id:"examples-2"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend              # This is the component I want to deploy\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: scaler         # Set the replica to the specified value\n          properties:\n            replicas: 5\n")),(0,l.kt)("h2",{id:"autoscaler"},"AutoScaler"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"autoscaler")," trait use K8s HPA to control the replica of component."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: ",(0,l.kt)("inlineCode",{parentName:"p"},"autoscaler")," trait is hidden by default in ",(0,l.kt)("inlineCode",{parentName:"p"},"VelaUX"),", you can use it in CLI.")),(0,l.kt)("h3",{id:"apply-to-component-types-3"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All component based on ",(0,l.kt)("inlineCode",{parentName:"li"},"deployments.apps"))),(0,l.kt)("h3",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"NAME"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"REQUIRED"),(0,l.kt)("th",{parentName:"tr",align:null},"DEFAULT"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"min"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the minimal number of replicas to which the autoscaler can scale down"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"max"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the maximum number of of replicas to which the autoscaler can scale up"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cpuUtil"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify the average cpu utilization, for example, 50 means the CPU usage is 50%"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"50")))),(0,l.kt)("h3",{id:"examples-3"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: website\nspec:\n  components:\n    - name: frontend              # This is the component I want to deploy\n      type: webservice\n      properties:\n        image: nginx\n      traits:\n        - type: cpuscaler         # Automatically scale the component by CPU usage after deployed\n          properties:\n            min: 1\n            max: 10\n            cpuPercent: 60\n")),(0,l.kt)("h2",{id:"storage"},"Storage"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"storage")," trait allows you to manage storages for the component."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"storage")," can help us create and bind storages like ",(0,l.kt)("inlineCode",{parentName:"p"},"pvc"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"emptyDir"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"secret"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"configMap")," for our component. For ",(0,l.kt)("inlineCode",{parentName:"p"},"secret")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"configMap")," type storage, we can also bind it to the ",(0,l.kt)("inlineCode",{parentName:"p"},"env"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If you don't want to create the storages automatically, you can set ",(0,l.kt)("inlineCode",{parentName:"p"},"mountOnly")," to true.")),(0,l.kt)("h3",{id:"apply-to-component-types-4"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All component based on ",(0,l.kt)("inlineCode",{parentName:"li"},"deployments.apps"))),(0,l.kt)("h3",{id:"parameters-4"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ vela show storage\n# Properties\n\n## pvc\n+------------------+-------------+---------------------------------+----------+------------+\n|       NAME       | DESCRIPTION |              TYPE               | REQUIRED |  DEFAULT   |\n+------------------+-------------+---------------------------------+----------+------------+\n| name             |             | string                          | true     |            |\n| volumeMode       |             | string                          | true     | Filesystem |\n| mountPath        |             | string                          | true     |            |\n| mountOnly        |             | bool                            | true     | false      |\n| accessModes      |             | [...]                           | true     |            |\n| volumeName       |             | string                          | false    |            |\n| storageClassName |             | string                          | false    |            |\n| resources        |             | [resources](#resources)         | false    |            |\n| dataSourceRef    |             | [dataSourceRef](#dataSourceRef) | false    |            |\n| dataSource       |             | [dataSource](#dataSource)       | false    |            |\n| selector         |             | [selector](#selector)           | false    |            |\n+------------------+-------------+---------------------------------+----------+------------+\n\n...\n\n## emptyDir\n+-----------+-------------+--------+----------+---------+\n|   NAME    | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+-----------+-------------+--------+----------+---------+\n| name      |             | string | true     |         |\n| medium    |             | string | true     | empty   |\n| mountPath |             | string | true     |         |\n+-----------+-------------+--------+----------+---------+\n\n## secret\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n|    NAME     | DESCRIPTION |                          TYPE                          | REQUIRED | DEFAULT |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n| name        |             | string                                                 | true     |         |\n| defaultMode |             | int                                                    | true     |     420 |\n| items       |             | [[]items](#items)                                      | false    |         |\n| mountPath   |             | string                                                 | true     |         |\n| mountToEnv  |             | [mountToEnv](#mountToEnv)                              | false    |         |\n| mountOnly   |             | bool                                                   | true     | false   |\n| data        |             | map[string]{null|bool|string|bytes|{...}|[...]|number} | false    |         |\n| stringData  |             | map[string]{null|bool|string|bytes|{...}|[...]|number} | false    |         |\n| readOnly    |             | bool                                                   | true     | false   |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n\n...\n\n## configMap\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n|    NAME     | DESCRIPTION |                          TYPE                          | REQUIRED | DEFAULT |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n| name        |             | string                                                 | true     |         |\n| defaultMode |             | int                                                    | true     |     420 |\n| items       |             | [[]items](#items)                                      | false    |         |\n| mountPath   |             | string                                                 | true     |         |\n| mountToEnv  |             | [mountToEnv](#mountToEnv)                              | false    |         |\n| mountOnly   |             | bool                                                   | true     | false   |\n| data        |             | map[string]{null|bool|string|bytes|{...}|[...]|number} | false    |         |\n| readOnly    |             | bool                                                   | true     | false   |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n\n\n")),(0,l.kt)("h2",{id:"examples-4"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: storage-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        ports:\n          - port: 8000\n      traits:\n        - type: storage\n          properties:\n            # PVC type storage\n            pvc:\n              - name: test1\n                mountPath: /test/mount/pvc\n            # EmptyDir type storage\n            emptyDir:\n              - name: test1\n                mountPath: /test/mount/emptydir\n            # ConfigMap type storage\n            configMap:\n              - name: test1\n                mountPath: /test/mount/cm\n                # Mount ConfigMap to Env\n                mountToEnv:\n                  envName: TEST_ENV\n                  configMapKey: key1\n                data:\n                  key1: value1\n                  key2: value2\n            # Secret type storage\n            secret:\n              - name: test1\n                mountPath: /test/mount/secret\n                # Mount Secret to Env\n                mountToEnv:\n                  envName: TEST_SECRET\n                  secretKey: key1\n                data:\n                  key1: dmFsdWUx\n                  key2: dmFsdWUy\n")),(0,l.kt)("h2",{id:"labels"},"Labels"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"labels")," trait allow us to mark labels on Pod for workload."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: ",(0,l.kt)("inlineCode",{parentName:"p"},"labels")," trait are hidden by default in ",(0,l.kt)("inlineCode",{parentName:"p"},"VelaUX"),", you can use them in CLI.")),(0,l.kt)("h3",{id:"apply-to-component-types-5"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"all component types")),(0,l.kt)("h3",{id:"parameters-5"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ vela show labels\n# Properties\n+-----------+-------------+-------------------+----------+---------+\n|   NAME    | DESCRIPTION |       TYPE        | REQUIRED | DEFAULT |\n+-----------+-------------+-------------------+----------+---------+\n| -         |             | map[string]string | true     |         |\n+-----------+-------------+-------------------+----------+---------+\n")),(0,l.kt)("p",null,"They're all string Key-Value pairs."),(0,l.kt)("h3",{id:"examples-5"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'# myapp.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: myapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8000\n      traits:\n        - type: labels\n          properties:\n            "release": "stable"\n')),(0,l.kt)("h2",{id:"annotations"},"Annotations"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"annotations")," trait allow us to mark annotations on Pod for workload."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: ",(0,l.kt)("inlineCode",{parentName:"p"},"annotations")," trait are hidden by default in ",(0,l.kt)("inlineCode",{parentName:"p"},"VelaUX"),", you can use them in CLI.")),(0,l.kt)("h3",{id:"apply-to-component-types-6"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"all component types")),(0,l.kt)("h3",{id:"parameters-6"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ vela show annotations\n# Properties\n+-----------+-------------+-------------------+----------+---------+\n|   NAME    | DESCRIPTION |       TYPE        | REQUIRED | DEFAULT |\n+-----------+-------------+-------------------+----------+---------+\n| -         |             | map[string]string | true     |         |\n+-----------+-------------+-------------------+----------+---------+\n")),(0,l.kt)("p",null,"They're all string Key-Value pairs."),(0,l.kt)("h3",{id:"examples-6"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'# myapp.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: myapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8000\n      traits:\n        - type: annotations\n          properties:\n            "description": "web application"\n')),(0,l.kt)("h2",{id:"kustomize-patch"},"kustomize-patch"),(0,l.kt)("p",null,"Trait ",(0,l.kt)("inlineCode",{parentName:"p"},"kustomize-patch")," will patch on the Kustomize component."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: To use ",(0,l.kt)("inlineCode",{parentName:"p"},"kustomize")," trait, you must enable ",(0,l.kt)("inlineCode",{parentName:"p"},"fluxcd")," addon first. ")),(0,l.kt)("h3",{id:"apply-to-component-types-7"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"kustomize")),(0,l.kt)("h3",{id:"parameters-7"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"vela show kustomize-patch\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# Properties\n+---------+---------------------------------------------------------------+-----------------------+----------+---------+\n|  NAME   |                          DESCRIPTION                          |         TYPE          | REQUIRED | DEFAULT |\n+---------+---------------------------------------------------------------+-----------------------+----------+---------+\n| patches | a list of StrategicMerge or JSON6902 patch to selected target | [[]patches](#patches) | true     |         |\n+---------+---------------------------------------------------------------+-----------------------+----------+---------+\n\n\n## patches\n+--------+---------------------------------------------------+-------------------+----------+---------+\n|  NAME  |                    DESCRIPTION                    |       TYPE        | REQUIRED | DEFAULT |\n+--------+---------------------------------------------------+-------------------+----------+---------+\n| patch  | Inline patch string, in yaml style                | string            | true     |         |\n| target | Specify the target the patch should be applied to | [target](#target) | true     |         |\n+--------+---------------------------------------------------+-------------------+----------+---------+\n\n\n### target\n+--------------------+-------------+--------+----------+---------+\n|        NAME        | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+--------------------+-------------+--------+----------+---------+\n| name               |             | string | false    |         |\n| group              |             | string | false    |         |\n| version            |             | string | false    |         |\n| kind               |             | string | false    |         |\n| namespace          |             | string | false    |         |\n| annotationSelector |             | string | false    |         |\n| labelSelector      |             | string | false    |         |\n+--------------------+-------------+--------+----------+---------+\n")),(0,l.kt)("h3",{id:"examples-7"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: kustomize\n      # ... omitted for brevity\n      traits:\n        - type: kustomize-patch\n          properties:\n            patches:\n              - patch: |-\n                  apiVersion: v1\n                  kind: Pod\n                  metadata:\n                    name: not-used\n                    labels:\n                      app.kubernetes.io/part-of: test-app\n                target:\n                  labelSelector: "app=podinfo"\n')),(0,l.kt)("p",null,"In this example, the ",(0,l.kt)("inlineCode",{parentName:"p"},"kustomize-patch")," will patch the content for all Pods with label ",(0,l.kt)("inlineCode",{parentName:"p"},"app=podinfo"),"."),(0,l.kt)("h2",{id:"kustomize-json-patch"},"kustomize-json-patch"),(0,l.kt)("p",null,"You could use this trait in ",(0,l.kt)("a",{parentName:"p",href:"https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/patchesjson6902/"},"JSON6902 format")," to patch for the kustomize component."),(0,l.kt)("h3",{id:"apply-to-component-types-8"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"kustomize")),(0,l.kt)("h3",{id:"parameters-8"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"vela show kustomize-json-patch\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# Properties\n+-------------+---------------------------+-------------------------------+----------+---------+\n|    NAME     |        DESCRIPTION        |             TYPE              | REQUIRED | DEFAULT |\n+-------------+---------------------------+-------------------------------+----------+---------+\n| patchesJson | A list of JSON6902 patch. | [[]patchesJson](#patchesJson) | true     |         |\n+-------------+---------------------------+-------------------------------+----------+---------+\n\n\n## patchesJson\n+--------+-------------+-------------------+----------+---------+\n|  NAME  | DESCRIPTION |       TYPE        | REQUIRED | DEFAULT |\n+--------+-------------+-------------------+----------+---------+\n| patch  |             | [patch](#patch)   | true     |         |\n| target |             | [target](#target) | true     |         |\n+--------+-------------+-------------------+----------+---------+\n\n\n#### target\n+--------------------+-------------+--------+----------+---------+\n|        NAME        | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+--------------------+-------------+--------+----------+---------+\n| name               |             | string | false    |         |\n| group              |             | string | false    |         |\n| version            |             | string | false    |         |\n| kind               |             | string | false    |         |\n| namespace          |             | string | false    |         |\n| annotationSelector |             | string | false    |         |\n| labelSelector      |             | string | false    |         |\n+--------------------+-------------+--------+----------+---------+\n\n\n### patch\n+-------+-------------+--------+----------+---------+\n| NAME  | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+-------+-------------+--------+----------+---------+\n| path  |             | string | true     |         |\n| op    |             | string | true     |         |\n| value |             | string | false    |         |\n+-------+-------------+--------+----------+---------+\n")),(0,l.kt)("h3",{id:"examples-8"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: kustomize\n      # ... omitted for brevity\n      traits:\n        - type: kustomize-json-patch\n          properties:\n            patchesJson:\n              - target:\n                  version: v1\n                  kind: Deployment\n                  name: podinfo\n                patch:\n                - op: add\n                  path: /metadata/annotations/key\n                  value: value\n")),(0,l.kt)("h2",{id:"kustomize-strategy-merge"},"kustomize-strategy-merge"),(0,l.kt)("p",null,"kustomize-strategy-merge trait provide strategy merge patch for kustomize component."),(0,l.kt)("h3",{id:"apply-to-component-types-9"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"kustomize")),(0,l.kt)("h3",{id:"parameters-9"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"vela show kustomize-json-patch\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# Properties\n+-----------------------+-----------------------------------------------------------+---------------------------------------------------+----------+---------+\n|         NAME          |                        DESCRIPTION                        |                       TYPE                        | REQUIRED | DEFAULT |\n+-----------------------+-----------------------------------------------------------+---------------------------------------------------+----------+---------+\n| patchesStrategicMerge | a list of strategicmerge, defined as inline yaml objects. | [[]patchesStrategicMerge](#patchesStrategicMerge) | true     |         |\n+-----------------------+-----------------------------------------------------------+---------------------------------------------------+----------+---------+\n\n\n## patchesStrategicMerge\n+-----------+-------------+--------------------------------------------------------+----------+---------+\n|   NAME    | DESCRIPTION |                          TYPE                          | REQUIRED | DEFAULT |\n+-----------+-------------+--------------------------------------------------------+----------+---------+\n| undefined |             | map[string]{null|bool|string|bytes|{...}|[...]|number} | true     |         |\n")),(0,l.kt)("h3",{id:"examples-9"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: bucket-app\nspec:\n  components:\n    - name: bucket-comp\n      type: kustomize\n      # ... omitted for brevity\n      traits:\n        - type: kustomize-strategy-merge\n          properties:\n            patchesStrategicMerge:\n              - apiVersion: apps/v1\n                kind: Deployment\n                metadata:\n                  name: podinfo\n                spec:\n                  template:\n                    spec:\n                      serviceAccount: custom-service-account\n")),(0,l.kt)("h2",{id:"service-binding"},"service-binding"),(0,l.kt)("p",null,"Service binding trait will bind data from Kubernetes ",(0,l.kt)("inlineCode",{parentName:"p"},"Secret")," to the application container's ENV."),(0,l.kt)("h3",{id:"apply-to-component-types-10"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"webservice"),(0,l.kt)("li",{parentName:"ul"},"worker"),(0,l.kt)("li",{parentName:"ul"},"task"),(0,l.kt)("li",{parentName:"ul"},"cron-task")),(0,l.kt)("h3",{id:"parameters-10"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"envMappings"),(0,l.kt)("td",{parentName:"tr",align:null},"The mapping of environment variables to secret"),(0,l.kt)("td",{parentName:"tr",align:null},"map","[string]","#KeySecret"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"keysecret"},"KeySecret"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},"if key is empty, we will use envMappings key instead"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secret"),(0,l.kt)("td",{parentName:"tr",align:null},"Kubernetes secret name"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"examples-10"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: init-secret-with-http\n  namespace: default\nspec:\n  components:\n  - name: my-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: service-binding\n      properties:\n        envMappings:\n          MY_ENV:\n            secret: secret1\n          MY_ENV2:\n            secret: secret2\n            key: test\n")),(0,l.kt)("h2",{id:"sidecar"},"sidecar"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"sidecar")," trait allows you to attach a sidecar container to the component."),(0,l.kt)("h3",{id:"apply-to-component-types-11"},"Apply To Component Types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"webservice"),(0,l.kt)("li",{parentName:"ul"},"worker"),(0,l.kt)("li",{parentName:"ul"},"task"),(0,l.kt)("li",{parentName:"ul"},"cron-task")),(0,l.kt)("h3",{id:"parameters-11"},"Parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"# Properties\n+---------+-----------------------------------------+-----------------------+----------+---------+\n|  NAME   |               DESCRIPTION               |         TYPE          | REQUIRED | DEFAULT |\n+---------+-----------------------------------------+-----------------------+----------+---------+\n| name    | Specify the name of sidecar container   | string                | true     |         |\n| cmd     | Specify the commands run in the sidecar | []string              | false    |         |\n| image   | Specify the image of sidecar container  | string                | true     |         |\n| volumes | Specify the shared volume path          | [[]volumes](#volumes) | false    |         |\n+---------+-----------------------------------------+-----------------------+----------+---------+\n\n\n## volumes\n+-----------+-------------+--------+----------+---------+\n|   NAME    | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+-----------+-------------+--------+----------+---------+\n| name      |             | string | true     |         |\n| path      |             | string | true     |         |\n+-----------+-------------+--------+----------+---------+\n")),(0,l.kt)("h3",{id:"examples-11"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# app.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app-with-sidecar\nspec:\n  components:\n    - name: log-gen-worker\n      type: worker\n      properties:\n        image: busybox\n        cmd:\n          - /bin/sh\n          - -c\n          - >\n            i=0;\n            while true;\n            do\n              echo \"$i: $(date)\" >> /var/log/date.log;\n              i=$((i+1));\n              sleep 1;\n            done\n        volumes:\n          - name: varlog\n            mountPath: /var/log\n            type: emptyDir\n      traits:\n        - type: sidecar\n          properties:\n            name: count-log\n            image: busybox\n            cmd: [ /bin/sh, -c, 'tail -n+1 -f /var/log/date.log']\n            volumes:\n              - name: varlog\n                path: /var/log\n")))}m.isMDXComponent=!0}}]);